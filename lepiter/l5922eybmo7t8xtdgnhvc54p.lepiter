{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T17:33:51.428013+11:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T17:36:00.091081+11:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zhdQuZfIDQCcXqtnCGwhDw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Glamorous Toolkit works with other runtimes. For example, we can work with [[Python]] through [[PythonBridge]]. But what might be less obvious is that we can also extend the inspector using Python."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-04T11:23:49.007133+10:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:00:02.675872+11:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Xej7tAbIDQCSwmYEB/HrCQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To exemplify how this works, let's consider exploring a movie collection defined in this CSV:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-04T11:27:44.658665+10:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:23:04.399363+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3KkHwwbIDQCVLv/wB/HrCQ=="
				},
				"code" : "csvFile := (FileLocator gtResource / 'feenkcom' / 'gtoolkit-demos' / 'data' / 'imdb' / 'Movies.csv') fullName."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-12-07T17:50:19.048981+11:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-12-14T09:42:48.374227+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "4l0qnkfIDQCfzsojC7RBkw=="
							},
							"code" : "PBApplication isRunning ifFalse: [ PBApplication start ].\nPBApplication uniqueInstance installModule: 'pandas'."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:00:22.336239+11:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-14T10:01:31.409195+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Z49tOJjIDQCn4zQgCGwhDw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We load it with pandas, and to do that we first set up the Python runtime by installing the pandas module. (NB: You might need to install [pipenv](https://pypi.org/project/pipenv/) first.)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pythonSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-12-04T11:22:45.452454+10:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-07-05T19:30:33.940009+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "9iMysQbIDQCSLkraB/HrCQ=="
							},
							"code" : "import pandas\rfrom gtoolkit_bridge import gtView\n\nclass Movie:\n\tdef __init__(self, series):\n\t\tself.series  = series\n\r\t@gtView\n\tdef gtViewDescription(self, builder):\r\t\ttext = builder.textEditor()\n\t\ttext.title(\"Description\")\r\t\ttext.priority(30)\r\t\ttext.setString(str(self.series))\r\t\treturn text\r\r\t@gtView\r\tdef gtViewDetails(self, builder):\r\t\tclist = builder.columnedList()\r\t\tclist.title(\"Details\")\r\t\tclist.priority(20)\r\t\tclist.items(lambda: list(self.series.index))\n\t\tclist.column('Key', lambda each: each)\n\t\tclist.column('Value', lambda each: str(self.series[each]))\n\t\tclist.set_accessor(lambda each: self.series[each])\r\t\treturn clist\n\nclass MovieCollection:\n\tdef __init__(self, dataFrame):\n\t\tself.df = dataFrame\n\t\t\n\tdef size(self):\n\t\treturn len(self.df.index)\r\r\tdef movieAtPosition(self, index):\r\t\treturn Movie(self.df.loc[index])\n\n\tdef directors(self):\n\t\tvalues = self.df[\"Directors\"].astype(str).unique()\n\t\tvalues.sort()\n\t\treturn map(lambda each: [each, self.moviesWithDirector(each)], values)\n\t\n\tdef years(self):\n\t\tvalues = self.df[\"Year\"].unique().tolist()\n\t\tvalues.sort()\n\t\treturn map(lambda each: [each, self.moviesReleasedInYear(each)], values)\n\t\n\tdef moviesReleasedInYear(self, year):\n\t\treturn MovieCollection(self.df[self.df[\"Year\"] == year].reset_index(drop=True))\n\t\n\tdef moviesWithDirector(self, director):\n\t\treturn MovieCollection(self.df[self.df[\"Directors\"] == director].reset_index(drop=True))\n\n\t@gtView\r\tdef gtViewYears(self, builder):\n\t\tclist = builder.columnedList()\n\t\tclist.title(\"Years\")\n\t\tclist.priority(30)\n\t\tclist.items(lambda: self.years())\n\t\tclist.column(\"Year\", lambda each: str(each[0]))\n\t\tclist.column(\"Count\", lambda each: str(each[1].size()))\n\t\tclist.set_accessor(lambda each: [*self.years()][each][1])\n\t\treturn clist\n\n\t@gtView\r\tdef gtViewDirectors(self, builder):\n\t\tclist = builder.columnedList()\n\t\tclist.title(\"Directors\")\n\t\tclist.priority(20)\n\t\tclist.items(lambda: self.directors())\n\t\tclist.column(\"Director\", lambda each: str(each[0]))\n\t\tclist.column(\"Count\", lambda each: str(each[1].size()))\n\t\tclist.set_accessor(lambda each: [*self.directors()][each][1])\n\t\treturn clist\r\r\t@gtView\r\tdef gtViewMovies(self, aBuilder):\n\t\ttable = aBuilder.columnedList()\n\t\ttable.title(\"Movies\")\n\t\ttable.priority(50)\n\t\ttable.items(lambda: list(self.df.index))\r\t\ttable.column(\"Title\", lambda index: str(self.df.at[index, \"Title\"]))\n\t\ttable.column(\"Release date\", lambda index: str(self.df.at[index, \"Release Date\"]))\n\t\ttable.column(\"Directors\", lambda index: str(self.df.at[index, \"Directors\"]))\n\t\ttable.column(\"Genres\", lambda index: str(self.df.at[index, \"Genres\"]))\n\t\ttable.set_accessor(lambda each: Movie(self.df.loc[list(self.df.index)[each]]))\r\t\treturn table\n\t\t\r\tdef gtViewMoviesDetails(self, aBuilder):\n\t\ttable = aBuilder.columnedList()\n\t\ttable.title(\"Movies with details\")\n\t\ttable.priority(50)\n\t\ttable.items(lambda: list(self.df.index))\n\t\tfor each in self.df.columns:\n\t\t\t(lambda col: table.column(col, lambda index: str(self.df.at[index, col])))(each)\n\t\ttable.set_accessor(lambda each: Movie(self.df.loc[list(self.df.index)[each]]))\n\t\treturn table"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:04:34.003287+11:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:05:47.813558+11:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xZSysgbIDQCSZAgOB/HrCQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Ok, now that's done. Next, we define views as extensions to the movie collection entities:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:03:19.111915+11:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-11T18:04:25.936707+11:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "j60GRJjIDQCtNPM/CGwhDw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we are set, so let's inspect the movie collection:"
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-01-31T12:43:33.128411+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:22:54.459862+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "rlAgIJ7MDQCeCBbPCdpXaA=="
				},
				"code" : "MovieCollection(pandas.read_csv(csvFile))"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:23:32.231909+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:23:50.872703+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3Tde3uDYDQCwCckjDssbEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "###Alternative approach"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:23:54.807288+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:26:56.63822+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2ra23+DYDQCwm3sWDssbEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Instead of putting our code inside a Python snippet, we can also use a traditional Python source file."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:24:56.983233+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:24:57.479541+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Q2dr4+DYDQCys0SQDssbEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First we copy a predefined Python source file `movie.py` into the working directory of the PythonBridge so that it can be found in Python's default search path."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:25:12.018565+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-01T19:08:59.827965+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "E9pQ5ODYDQCyvk5nDssbEw=="
				},
				"code" : "sourceFile := FileLocator gtResource / 'feenkcom' / 'gt4python' / 'data' / 'python' / 'movie.py'.\rPBPlatform current workingDirectory ensureCreateDirectory.\rsourceFile copyTo: PBPlatform current workingDirectory / sourceFile basename.\rPBPlatform current workingDirectory"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:25:29.59538+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:30:00.842792+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9A9d5eDYDQCyyV8vDssbEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can open an IDE view on local Python source files in the PythonBridge's working directory to verify that all is OK and to view the file's content. Press the + icon top left to expand the directory view and the - icon to get back."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:25:47.043593+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:25:48.175556+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "XE1n5uDYDQCy0681DssbEw=="
				},
				"code" : "GtLSPPythonModel onDirectory: PBPlatform current workingDirectory"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:25:53.963594+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:26:07.70655+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oOTQ5uDYDQCy3GJRDssbEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we can use our local source file from a Python snippet."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:26:36.963892+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-07-05T14:26:38.039856+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/ABh6eDYDQCzAFgDDssbEw=="
				},
				"code" : "import movie\rimport pandas\r\rmovie.MovieCollection(pandas.read_csv(csvFile))"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-12-04T11:22:02.861759+10:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-08-21T11:15:14.358536+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Inspecting Python objects with contextual views"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "f977e79f-06c8-0d00-8fd4-46b107f1eb09"
	}
}