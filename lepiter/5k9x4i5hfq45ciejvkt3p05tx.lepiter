{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:50:39.575492+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:13:02.034722+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5AHK7ePODQCLjE1xCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This tutorial shows how to analyse Python code using GT's {{gtPage:PythonBridge|db=2j9m7db2i4oz116bexd7wbdxo}}. In particular, we'll look at a simple sorting algorithm and mold our tools to explain how the algorithm works."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:54:54.28444+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:54:58.995544+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aYb4/OPODQCQkdVwCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Setup"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:54:59.664442+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-03-11T10:30:56.283524-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "XKJK/ePODQCQvcC6CyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First make sure GT's {{gtPage:PythonBridge|db=2j9m7db2i4oz116bexd7wbdxo}} is up and running. Let's define a small list of random numbers."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:56:09.488086+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:25:02.982091+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Swx0AeTODQCUKIF4CyT4XQ=="
				},
				"code" : "import random\nnumbers = random.sample(range(100), 10)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:58:24.853638+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:59:17.429816+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "DJGFCeTODQCU9Kk4CyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The indicator in the Python snippet above should show an active Python connection."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:59:20.675521+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:03:01.163085+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "tljZDOTODQCXHqLHCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can now copy our tutorial files into the `PythonBridgeRuntime` directory next to our GT image."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:52:55.245049+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T14:07:01.942114+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wCLg9ePODQCP2l2MCyT4XQ=="
				},
				"code" : "files := FileLocator gtResource / 'feenkcom' / 'gt4python' / 'data' / 'python' childrenMatching: 'lampsort*.py'.\rfiles do: [ :each | each copyTo: PBPlatform current workingDirectory / each basename ].\rPBPlatform current workingDirectory"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:33:23.548236+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:33:26.349331+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "NWSMheTODQC2RjfZCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#LampSort"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:12:39.304127+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:15:38.435743+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gmpzPOTODQCbOARgCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we can open a view on the Python files inside  into the `PythonBridgeRuntime` directory next to our GT image which now contains our tutorial files. Let's look at `lampsort0.py` which is our orginal version."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:07:12.269985+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:07:12.707136+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xVD1KOTODQCZ5u0cCyT4XQ=="
				},
				"code" : "GtLSPPythonModel onDirectory: PBPlatform current workingDirectory"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:31:12.453126+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:33:46.120389+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9bRce+TODQCyDdCVCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The above tool uses [LSP](https://en.wikipedia.org/wiki/Language_Server_Protocol). For optimal usability during editing you should install [pyright](https://github.com/microsoft/pyright)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:22:17.424916+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:22:17.424916+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MtLoXuTODQCpPpGcCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`LampSort` is an object that wraps a data list and sorts it in place. The LampSort algorithm is a non-recursive implementation of [QuickSort](https://en.wikipedia.org/wiki/Quicksort)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T10:49:56.838799+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:22:17.429889+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oOU96+PODQCLi7MsCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "It works by partitioning the list into intervals around a pivot, where the left interval contains elements smaller than the pivot and the right interval elements larger than the pivot. Intervals are partitioned further until they contain one element or are empty, in which case they are sorted by default."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:22:22.332725+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:23:40.733348+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "s7UzX+TODQCpRBynCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The algorithm starts from a set containing one interval covering the whole list. It is done when this set is empty. Range objects are used to represent intervals."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:23:46.190126+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:24:14.500665+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hEszZOTODQCs/i7TCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's make sure our implementation works."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:24:27.971268+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-03-12T07:42:19.109869-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ltCwZuTODQCug2nFCyT4XQ=="
				},
				"code" : "import lampsort0\rresult = lampsort0.LampSort(numbers.copy()).sort()\rassert result == sorted(numbers)\rresult"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:36:30.856796+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:43:24.73455+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9zTHkeTODQC28i3FCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Tracing"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:39:12.579446+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-07-08T15:41:33.973767+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "keNqm+TODQC++LyFCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you look carefully at the LampSort implementation you'll notice that there are methods for each individual step, with a meaningful name and with relevant arguments (the data list of elements is never passed as an argument; it is an instance variable)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:36:37.019364+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:41:53.967727+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "tz8lkuTODQC3HnBcCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : " A very low cost way to analyse our code is by tracing it. We do this by adding a `@gtTrace` method annotation. The result can be seen in `lampsort1.py`. Open the view we used above and click the + at the top left to expand a directory view listing all files, clicking the - to go back."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:44:09.752099+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:45:52.318338+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2Dctt+TODQCG+tPMCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To explain what is going on, we start by looking at the result. We run our second version, with annotated methods."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:46:17.125484+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:45:20.769312+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "m+24tOTODQCGWlJzCyT4XQ=="
				},
				"code" : "import lampsort1\rfrom gtoolkit_bridge import reset_signals, get_signals\r\rreset_signals()\rresult = lampsort1.LampSort(numbers.copy()).sort()\rassert result == sorted(numbers)\rget_signals()"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T11:45:23.132569+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:56:48.159021+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "XOiAseTODQCGVqKUCyT4XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The result of `get_signals()` is a **TelemetrySignalGroup** which is a wrapper around a list of **TelemetrySignal**s. In the case of `@gtTrace` each method produces two signals: an **ArgumentMethodStartSignal** and a **ResultMethodEndSignal**. Matching start and end signals get combined into **TelemetryEvent**s."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:50:38.019002+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:02:17.02295+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0IPZmuXODQCiB10ABBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The tracing does not produce text output somewhere, it produces a collection of signals that get interpreted as events. The signals/events contain automatically derived information: the name of the method, the argument names mapped to argument values and the method result. Timing information is also included."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:56:04.514652+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:56:11.16093+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8mpPruXODQCqGrxNBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Analysis"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:56:14.987938+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:00:56.243024+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cj/vruXODQCqVbnbBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A number of custom views on **TelemetrySignalGroup** now show us what is going on with our algorithm. The *Signals* view/tab lists all collected signals, basically the wrapped data."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:59:59.107701+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:04:38.368174+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4gpLvOXODQCvywXFBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Looking at an individual signal there is a *call* view/tab that show the the argument names mapped to argument values and/or the method result."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:07:55.368585+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:07:55.368585+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KS6u2OXODQC6BedZBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The *Tree* view/tab allows you to see the call structure: the substeps belonging to each step (you can click the tree open with the triangle)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T12:59:16.855199+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:07:55.372798+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xVLGueXODQCu6xMiBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Note that the elements of the tree are events, they combine a start and stop signal. The *call* view/tab now shows both the argument names mapped to argument values and the method result."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:05:45.533439+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:10:10.622774+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/xXx0OXODQC5e+yCBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "By keeping a tree open with call details as a linked view, you can now move through each step the algorithm takes."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:10:20.514838+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T13:11:55.410662+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qfJU4eXODQC+MNSZBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The *Map* view/tab is a more graphical representation of the events/steps. You can now see the decomposition of higher level step into substeps. Each box contains the method/step name and is clickable to inspect details."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:00:01.50561+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:00:54.53381+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PogqQOjODQCK7JS4BBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Signals"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:00:56.258327+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:13:04.171228+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JQZuQ+jODQCLVCB4BBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can also add simple signals inside our code for additional instrumentation. We create yet another variant, `lampsort2.py` where we add four information signals to the partition method. We want to see how the decision for each element with respect to the pivot is made. Furthermore we mark how the pivot is first stashed away to the end and then restored."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:01:43.616767+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:06:28.257928+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "MqVARujODQCMdUp3BBeZWA=="
				},
				"code" : "import lampsort2\rfrom gtoolkit_bridge import reset_signals, get_signals\r\rreset_signals()\rresult = lampsort2.LampSort(numbers.copy()).sort()\rassert result == sorted(numbers)\rget_signals()"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:07:38.150832+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:08:31.758244+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3mpiW+jODQCTZKy8BBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "When we change code in a Python source file that we already loaded in our running PythonBridge instance, we need to reload it using `importlib`."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:04:52.436845+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:05:30.484901+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Q9SBUejODQCRAIhDBBeZWA=="
				},
				"code" : "import importlib\rimportlib.reload(lampsort2)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:12:35.730528+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:14:39.288538+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zh4fbejODQCZa9E0BBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Combining the simple information signal with our more sophisticated trace signals helps to explain why each swap is being made when we look at the *Tree* view/tab."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:34:18.251793+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:34:24.894673+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "1QPCuujODQCisClpBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Molding"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:34:26.037823+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:36:28.561758+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "09M4u+jODQCjBF5TBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Up to now we used predefined signals and event. The last signal that we added contained only an identifying message string. We can do better by adding our own custom signal with a custom view."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:36:48.063234+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:38:01.547233+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wPOvw+jODQCnzC8tBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In `lampsort3.py` we define a PivotComparisonSignal subclass of TelemetrySignal to hold two properties. Then we define a view to show these properties."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:38:17.069978+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T16:38:26.334639+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "lhD+yOjODQCq9Sl+BBeZWA=="
				},
				"code" : "import lampsort3\rfrom gtoolkit_bridge import reset_signals, get_signals\r\rreset_signals()\rresult = lampsort3.LampSort(numbers.copy()).sort()\rassert result == sorted(numbers)\rget_signals()"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:36:59.113531+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:37:02.814753+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OzfsmunODQC38vnZBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#References"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:37:41.152964+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:37:41.157251+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "L70zm+nODQC4LZZeBBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[LampSort, a non-recursive QuickSort implementation](https://medium.com/concerning-pharo/lampsort-a-non-recursive-quicksort-implementation-4d4891b217bd) and [LampSort Revisited, Visualised](https://medium.com/concerning-pharo/lampsort-revisited-visualised-6652055ef858) (Combining Object Logging & Agile Visualisation)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:37:46.300715+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-02-29T17:38:01.182259+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6zq8nenODQC4ROI6BBeZWA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Equivalent code in GT: {{gtClass:GtLampSort}} and {{gtClass:GtLampSortWithAnnouncements}} with examples."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-02-29T10:50:39.550343+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-03-02T14:00:17.493402+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Exploring the execution of a Python LampSort algorithm"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "85923deb-e3ce-0d00-8b8a-e34c0b24f85d"
	}
}